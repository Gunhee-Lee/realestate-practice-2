# Makefile.in generated by automake 1.16.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@AUTO_BENCHMARK_FALSE@@BOOST_UNIT_TEST_FOUND_TRUE@bin_PROGRAMS = quantlib-test-suite$(EXEEXT)
@AUTO_BENCHMARK_TRUE@@BOOST_UNIT_TEST_FOUND_TRUE@bin_PROGRAMS = quantlib-test-suite$(EXEEXT) \
@AUTO_BENCHMARK_TRUE@@BOOST_UNIT_TEST_FOUND_TRUE@	quantlib-benchmark$(EXEEXT)
@AUTO_BENCHMARK_FALSE@@BOOST_UNIT_TEST_FOUND_TRUE@noinst_PROGRAMS = quantlib-benchmark$(EXEEXT)
@BOOST_UNIT_TEST_FOUND_TRUE@am__append_1 = \
@BOOST_UNIT_TEST_FOUND_TRUE@	CMakeLists.txt \
@BOOST_UNIT_TEST_FOUND_TRUE@	paralleltestrunner.hpp \
@BOOST_UNIT_TEST_FOUND_TRUE@	README.txt \
@BOOST_UNIT_TEST_FOUND_TRUE@	testsuite.vcxproj \
@BOOST_UNIT_TEST_FOUND_TRUE@	testsuite.vcxproj.filters

subdir = test-suite
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/ql/config.hpp
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
LTLIBRARIES = $(noinst_LTLIBRARIES)
libUnitMain_la_LIBADD =
am__libUnitMain_la_SOURCES_DIST = main.cpp
@BOOST_UNIT_TEST_FOUND_TRUE@am_libUnitMain_la_OBJECTS =  \
@BOOST_UNIT_TEST_FOUND_TRUE@	libUnitMain_la-main.lo
libUnitMain_la_OBJECTS = $(am_libUnitMain_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libUnitMain_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libUnitMain_la_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
@BOOST_UNIT_TEST_FOUND_TRUE@am_libUnitMain_la_rpath =
am__quantlib_benchmark_SOURCES_DIST = quantlibbenchmark.cpp \
	americanoption.cpp asianoptions.cpp barrieroption.cpp \
	doublebarrieroption.cpp basketoption.cpp batesmodel.cpp \
	convertiblebonds.cpp digitaloption.cpp dividendoption.cpp \
	europeanoption.cpp fdheston.cpp hestonmodel.cpp \
	interpolations.cpp jumpdiffusion.cpp \
	lowdiscrepancysequences.cpp marketmodel_cms.cpp \
	marketmodel_smm.cpp quantooption.cpp riskstats.cpp \
	shortratemodels.cpp utilities.cpp americanoption.hpp \
	asianoptions.hpp barrieroption.hpp doublebarrieroption.hpp \
	basketoption.hpp batesmodel.hpp convertiblebonds.hpp \
	digitaloption.hpp dividendoption.hpp europeanoption.hpp \
	fdheston.hpp hestonmodel.hpp interpolations.hpp \
	jumpdiffusion.hpp lowdiscrepancysequences.hpp \
	marketmodel_cms.hpp marketmodel_smm.hpp quantooption.hpp \
	riskstats.hpp shortratemodels.hpp utilities.hpp
am__objects_1 = quantlibbenchmark.$(OBJEXT) americanoption.$(OBJEXT) \
	asianoptions.$(OBJEXT) barrieroption.$(OBJEXT) \
	doublebarrieroption.$(OBJEXT) basketoption.$(OBJEXT) \
	batesmodel.$(OBJEXT) convertiblebonds.$(OBJEXT) \
	digitaloption.$(OBJEXT) dividendoption.$(OBJEXT) \
	europeanoption.$(OBJEXT) fdheston.$(OBJEXT) \
	hestonmodel.$(OBJEXT) interpolations.$(OBJEXT) \
	jumpdiffusion.$(OBJEXT) lowdiscrepancysequences.$(OBJEXT) \
	marketmodel_cms.$(OBJEXT) marketmodel_smm.$(OBJEXT) \
	quantooption.$(OBJEXT) riskstats.$(OBJEXT) \
	shortratemodels.$(OBJEXT) utilities.$(OBJEXT)
am__objects_2 =
am__objects_3 = $(am__objects_1) $(am__objects_2)
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_FALSE@am_quantlib_benchmark_OBJECTS = $(am__objects_3)
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@nodist_quantlib_benchmark_OBJECTS = unity_benchmark.$(OBJEXT)
quantlib_benchmark_OBJECTS = $(am_quantlib_benchmark_OBJECTS) \
	$(nodist_quantlib_benchmark_OBJECTS)
am__DEPENDENCIES_1 =
@BOOST_UNIT_TEST_FOUND_TRUE@quantlib_benchmark_DEPENDENCIES =  \
@BOOST_UNIT_TEST_FOUND_TRUE@	libUnitMain.la \
@BOOST_UNIT_TEST_FOUND_TRUE@	${top_builddir}/ql/libQuantLib.la \
@BOOST_UNIT_TEST_FOUND_TRUE@	$(am__DEPENDENCIES_1) \
@BOOST_UNIT_TEST_FOUND_TRUE@	$(am__DEPENDENCIES_1)
am__quantlib_test_suite_SOURCES_DIST = quantlibtestsuite.cpp \
	americanoption.cpp amortizingbond.cpp \
	andreasenhugevolatilityinterpl.cpp array.cpp asianoptions.cpp \
	assetswap.cpp autocovariances.cpp barrieroption.cpp \
	binaryoption.cpp basismodels.cpp basketoption.cpp \
	batesmodel.cpp bermudanswaption.cpp blackdeltacalculator.cpp \
	blackformula.cpp bonds.cpp brownianbridge.cpp \
	businessdayconventions.cpp calendars.cpp callablebonds.cpp \
	capfloor.cpp capflooredcoupon.cpp cashflows.cpp catbonds.cpp \
	cdo.cpp cdsoption.cpp chooseroption.cpp cliquetoption.cpp \
	cms.cpp cmsspread.cpp commodityunitofmeasure.cpp \
	compiledboostversion.cpp compoundoption.cpp \
	convertiblebonds.cpp covariance.cpp creditdefaultswap.cpp \
	creditriskplus.cpp curvestates.cpp dates.cpp daycounters.cpp \
	defaultprobabilitycurves.cpp digitalcoupon.cpp \
	digitaloption.cpp distributions.cpp dividendoption.cpp \
	doublebarrieroption.cpp doublebinaryoption.cpp \
	europeanoption.cpp everestoption.cpp exchangerate.cpp \
	extendedtrees.cpp extensibleoptions.cpp \
	fastfouriertransform.cpp fdheston.cpp fdcir.cpp \
	fdmlinearop.cpp fdcev.cpp fdsabr.cpp \
	fittedbonddiscountcurve.cpp forwardoption.cpp \
	forwardrateagreement.cpp functions.cpp garch.cpp \
	gaussianquadratures.cpp gjrgarchmodel.cpp gsr.cpp \
	hestonmodel.cpp hestonslvmodel.cpp himalayaoption.cpp \
	hybridhestonhullwhiteprocess.cpp indexes.cpp inflation.cpp \
	inflationcapfloor.cpp inflationcapflooredcoupon.cpp \
	inflationcpibond.cpp inflationcpicapfloor.cpp \
	inflationcpiswap.cpp inflationvolatility.cpp instruments.cpp \
	integrals.cpp interestrates.cpp interpolations.cpp \
	jumpdiffusion.cpp lazyobject.cpp libormarketmodel.cpp \
	libormarketmodelprocess.cpp linearleastsquaresregression.cpp \
	lookbackoptions.cpp lowdiscrepancysequences.cpp \
	margrabeoption.cpp marketmodel.cpp marketmodel_cms.cpp \
	marketmodel_smm.cpp marketmodel_smmcapletalphacalibration.cpp \
	marketmodel_smmcapletcalibration.cpp \
	marketmodel_smmcaplethomocalibration.cpp markovfunctional.cpp \
	matrices.cpp mclongstaffschwartzengine.cpp mersennetwister.cpp \
	money.cpp noarbsabr.cpp normalclvmodel.cpp \
	nthorderderivativeop.cpp nthtodefault.cpp \
	numericaldifferentiation.cpp observable.cpp ode.cpp \
	operators.cpp optimizers.cpp optionletstripper.cpp \
	overnightindexedswap.cpp pagodaoption.cpp \
	partialtimebarrieroption.cpp pathgenerator.cpp period.cpp \
	piecewiseyieldcurve.cpp piecewisezerospreadedtermstructure.cpp \
	quantooption.cpp quotes.cpp rangeaccrual.cpp \
	riskneutraldensitycalculator.cpp riskstats.cpp rngtraits.cpp \
	rounding.cpp sampledcurve.cpp schedule.cpp shortratemodels.cpp \
	sofrfutures.cpp solvers.cpp spreadoption.cpp \
	squarerootclvmodel.cpp stats.cpp swap.cpp \
	swapforwardmappings.cpp swaption.cpp \
	swaptionvolatilitycube.cpp swaptionvolatilitymatrix.cpp \
	swingoption.cpp termstructures.cpp timegrid.cpp timeseries.cpp \
	transformedgrid.cpp tqreigendecomposition.cpp tracing.cpp \
	twoassetbarrieroption.cpp twoassetcorrelationoption.cpp \
	ultimateforwardtermstructure.cpp utilities.cpp \
	variancegamma.cpp varianceoption.cpp varianceswaps.cpp \
	volatilitymodels.cpp vpp.cpp zabr.cpp speedlevel.hpp \
	americanoption.hpp amortizingbond.hpp \
	andreasenhugevolatilityinterpl.hpp array.hpp asianoptions.hpp \
	assetswap.hpp autocovariances.hpp barrieroption.hpp \
	binaryoption.hpp basismodels.hpp basketoption.hpp \
	batesmodel.hpp bermudanswaption.hpp blackdeltacalculator.hpp \
	blackformula.hpp bonds.hpp brownianbridge.hpp \
	businessdayconventions.hpp calendars.hpp callablebonds.hpp \
	capfloor.hpp capflooredcoupon.hpp cashflows.hpp catbonds.hpp \
	cdo.hpp cdsoption.hpp chooseroption.hpp cliquetoption.hpp \
	cms.hpp cmsspread.hpp commodityunitofmeasure.hpp \
	compiledboostversion.hpp compoundoption.hpp \
	convertiblebonds.hpp covariance.hpp creditdefaultswap.hpp \
	creditriskplus.hpp curvestates.hpp dates.hpp daycounters.hpp \
	defaultprobabilitycurves.hpp digitalcoupon.hpp \
	digitaloption.hpp distributions.hpp dividendoption.hpp \
	doublebarrieroption.hpp doublebinaryoption.hpp \
	europeanoption.hpp everestoption.hpp exchangerate.hpp \
	extendedtrees.hpp extensibleoptions.hpp \
	fastfouriertransform.hpp fdheston.hpp fdcir.hpp \
	fdmlinearop.hpp fdcev.hpp fdsabr.hpp \
	fittedbonddiscountcurve.hpp forwardoption.hpp \
	forwardrateagreement.hpp functions.hpp garch.hpp \
	gaussianquadratures.hpp gjrgarchmodel.hpp gsr.hpp \
	hestonmodel.hpp hestonslvmodel.hpp himalayaoption.hpp \
	hybridhestonhullwhiteprocess.hpp indexes.hpp inflation.hpp \
	inflationcapfloor.hpp inflationcapflooredcoupon.hpp \
	inflationcpibond.hpp inflationcpicapfloor.hpp \
	inflationcpiswap.hpp inflationvolatility.hpp instruments.hpp \
	integrals.hpp interestrates.hpp interpolations.hpp \
	jumpdiffusion.hpp lazyobject.hpp libormarketmodel.hpp \
	libormarketmodelprocess.hpp linearleastsquaresregression.hpp \
	lookbackoptions.hpp lowdiscrepancysequences.hpp \
	margrabeoption.hpp marketmodel.hpp marketmodel_cms.hpp \
	marketmodel_smm.hpp marketmodel_smmcapletalphacalibration.hpp \
	marketmodel_smmcapletcalibration.hpp \
	marketmodel_smmcaplethomocalibration.hpp markovfunctional.hpp \
	matrices.hpp mclongstaffschwartzengine.hpp mersennetwister.hpp \
	money.hpp noarbsabr.hpp normalclvmodel.hpp \
	nthorderderivativeop.hpp nthtodefault.hpp \
	numericaldifferentiation.hpp observable.hpp ode.hpp \
	operators.hpp optimizers.hpp optionletstripper.hpp \
	overnightindexedswap.hpp pagodaoption.hpp \
	partialtimebarrieroption.hpp pathgenerator.hpp period.hpp \
	piecewiseyieldcurve.hpp piecewisezerospreadedtermstructure.hpp \
	quantooption.hpp quotes.hpp rangeaccrual.hpp \
	riskneutraldensitycalculator.hpp riskstats.hpp rngtraits.hpp \
	rounding.hpp sampledcurve.hpp schedule.hpp shortratemodels.hpp \
	sofrfutures.hpp solvers.hpp spreadoption.hpp \
	squarerootclvmodel.hpp stats.hpp swap.hpp \
	swapforwardmappings.hpp swaption.hpp \
	swaptionvolatilitycube.hpp swaptionvolatilitymatrix.hpp \
	swaptionvolstructuresutilities.hpp swingoption.hpp \
	termstructures.hpp timegrid.hpp timeseries.hpp \
	transformedgrid.hpp tqreigendecomposition.hpp tracing.hpp \
	twoassetbarrieroption.hpp twoassetcorrelationoption.hpp \
	ultimateforwardtermstructure.hpp utilities.hpp \
	variancegamma.hpp varianceoption.hpp varianceswaps.hpp \
	volatilitymodels.hpp vpp.hpp zabr.hpp
am__objects_4 = quantlibtestsuite.$(OBJEXT) americanoption.$(OBJEXT) \
	amortizingbond.$(OBJEXT) \
	andreasenhugevolatilityinterpl.$(OBJEXT) array.$(OBJEXT) \
	asianoptions.$(OBJEXT) assetswap.$(OBJEXT) \
	autocovariances.$(OBJEXT) barrieroption.$(OBJEXT) \
	binaryoption.$(OBJEXT) basismodels.$(OBJEXT) \
	basketoption.$(OBJEXT) batesmodel.$(OBJEXT) \
	bermudanswaption.$(OBJEXT) blackdeltacalculator.$(OBJEXT) \
	blackformula.$(OBJEXT) bonds.$(OBJEXT) \
	brownianbridge.$(OBJEXT) businessdayconventions.$(OBJEXT) \
	calendars.$(OBJEXT) callablebonds.$(OBJEXT) capfloor.$(OBJEXT) \
	capflooredcoupon.$(OBJEXT) cashflows.$(OBJEXT) \
	catbonds.$(OBJEXT) cdo.$(OBJEXT) cdsoption.$(OBJEXT) \
	chooseroption.$(OBJEXT) cliquetoption.$(OBJEXT) cms.$(OBJEXT) \
	cmsspread.$(OBJEXT) commodityunitofmeasure.$(OBJEXT) \
	compiledboostversion.$(OBJEXT) compoundoption.$(OBJEXT) \
	convertiblebonds.$(OBJEXT) covariance.$(OBJEXT) \
	creditdefaultswap.$(OBJEXT) creditriskplus.$(OBJEXT) \
	curvestates.$(OBJEXT) dates.$(OBJEXT) daycounters.$(OBJEXT) \
	defaultprobabilitycurves.$(OBJEXT) digitalcoupon.$(OBJEXT) \
	digitaloption.$(OBJEXT) distributions.$(OBJEXT) \
	dividendoption.$(OBJEXT) doublebarrieroption.$(OBJEXT) \
	doublebinaryoption.$(OBJEXT) europeanoption.$(OBJEXT) \
	everestoption.$(OBJEXT) exchangerate.$(OBJEXT) \
	extendedtrees.$(OBJEXT) extensibleoptions.$(OBJEXT) \
	fastfouriertransform.$(OBJEXT) fdheston.$(OBJEXT) \
	fdcir.$(OBJEXT) fdmlinearop.$(OBJEXT) fdcev.$(OBJEXT) \
	fdsabr.$(OBJEXT) fittedbonddiscountcurve.$(OBJEXT) \
	forwardoption.$(OBJEXT) forwardrateagreement.$(OBJEXT) \
	functions.$(OBJEXT) garch.$(OBJEXT) \
	gaussianquadratures.$(OBJEXT) gjrgarchmodel.$(OBJEXT) \
	gsr.$(OBJEXT) hestonmodel.$(OBJEXT) hestonslvmodel.$(OBJEXT) \
	himalayaoption.$(OBJEXT) \
	hybridhestonhullwhiteprocess.$(OBJEXT) indexes.$(OBJEXT) \
	inflation.$(OBJEXT) inflationcapfloor.$(OBJEXT) \
	inflationcapflooredcoupon.$(OBJEXT) inflationcpibond.$(OBJEXT) \
	inflationcpicapfloor.$(OBJEXT) inflationcpiswap.$(OBJEXT) \
	inflationvolatility.$(OBJEXT) instruments.$(OBJEXT) \
	integrals.$(OBJEXT) interestrates.$(OBJEXT) \
	interpolations.$(OBJEXT) jumpdiffusion.$(OBJEXT) \
	lazyobject.$(OBJEXT) libormarketmodel.$(OBJEXT) \
	libormarketmodelprocess.$(OBJEXT) \
	linearleastsquaresregression.$(OBJEXT) \
	lookbackoptions.$(OBJEXT) lowdiscrepancysequences.$(OBJEXT) \
	margrabeoption.$(OBJEXT) marketmodel.$(OBJEXT) \
	marketmodel_cms.$(OBJEXT) marketmodel_smm.$(OBJEXT) \
	marketmodel_smmcapletalphacalibration.$(OBJEXT) \
	marketmodel_smmcapletcalibration.$(OBJEXT) \
	marketmodel_smmcaplethomocalibration.$(OBJEXT) \
	markovfunctional.$(OBJEXT) matrices.$(OBJEXT) \
	mclongstaffschwartzengine.$(OBJEXT) mersennetwister.$(OBJEXT) \
	money.$(OBJEXT) noarbsabr.$(OBJEXT) normalclvmodel.$(OBJEXT) \
	nthorderderivativeop.$(OBJEXT) nthtodefault.$(OBJEXT) \
	numericaldifferentiation.$(OBJEXT) observable.$(OBJEXT) \
	ode.$(OBJEXT) operators.$(OBJEXT) optimizers.$(OBJEXT) \
	optionletstripper.$(OBJEXT) overnightindexedswap.$(OBJEXT) \
	pagodaoption.$(OBJEXT) partialtimebarrieroption.$(OBJEXT) \
	pathgenerator.$(OBJEXT) period.$(OBJEXT) \
	piecewiseyieldcurve.$(OBJEXT) \
	piecewisezerospreadedtermstructure.$(OBJEXT) \
	quantooption.$(OBJEXT) quotes.$(OBJEXT) rangeaccrual.$(OBJEXT) \
	riskneutraldensitycalculator.$(OBJEXT) riskstats.$(OBJEXT) \
	rngtraits.$(OBJEXT) rounding.$(OBJEXT) sampledcurve.$(OBJEXT) \
	schedule.$(OBJEXT) shortratemodels.$(OBJEXT) \
	sofrfutures.$(OBJEXT) solvers.$(OBJEXT) spreadoption.$(OBJEXT) \
	squarerootclvmodel.$(OBJEXT) stats.$(OBJEXT) swap.$(OBJEXT) \
	swapforwardmappings.$(OBJEXT) swaption.$(OBJEXT) \
	swaptionvolatilitycube.$(OBJEXT) \
	swaptionvolatilitymatrix.$(OBJEXT) swingoption.$(OBJEXT) \
	termstructures.$(OBJEXT) timegrid.$(OBJEXT) \
	timeseries.$(OBJEXT) transformedgrid.$(OBJEXT) \
	tqreigendecomposition.$(OBJEXT) tracing.$(OBJEXT) \
	twoassetbarrieroption.$(OBJEXT) \
	twoassetcorrelationoption.$(OBJEXT) \
	ultimateforwardtermstructure.$(OBJEXT) utilities.$(OBJEXT) \
	variancegamma.$(OBJEXT) varianceoption.$(OBJEXT) \
	varianceswaps.$(OBJEXT) volatilitymodels.$(OBJEXT) \
	vpp.$(OBJEXT) zabr.$(OBJEXT)
am__objects_5 = $(am__objects_4) $(am__objects_2)
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_FALSE@am_quantlib_test_suite_OBJECTS = $(am__objects_5)
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@nodist_quantlib_test_suite_OBJECTS = unity_test.$(OBJEXT)
quantlib_test_suite_OBJECTS = $(am_quantlib_test_suite_OBJECTS) \
	$(nodist_quantlib_test_suite_OBJECTS)
@BOOST_UNIT_TEST_FOUND_TRUE@quantlib_test_suite_DEPENDENCIES =  \
@BOOST_UNIT_TEST_FOUND_TRUE@	libUnitMain.la \
@BOOST_UNIT_TEST_FOUND_TRUE@	${top_builddir}/ql/libQuantLib.la \
@BOOST_UNIT_TEST_FOUND_TRUE@	$(am__DEPENDENCIES_1) \
@BOOST_UNIT_TEST_FOUND_TRUE@	$(am__DEPENDENCIES_1) \
@BOOST_UNIT_TEST_FOUND_TRUE@	$(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/americanoption.Po \
	./$(DEPDIR)/amortizingbond.Po \
	./$(DEPDIR)/andreasenhugevolatilityinterpl.Po \
	./$(DEPDIR)/array.Po ./$(DEPDIR)/asianoptions.Po \
	./$(DEPDIR)/assetswap.Po ./$(DEPDIR)/autocovariances.Po \
	./$(DEPDIR)/barrieroption.Po ./$(DEPDIR)/basismodels.Po \
	./$(DEPDIR)/basketoption.Po ./$(DEPDIR)/batesmodel.Po \
	./$(DEPDIR)/bermudanswaption.Po ./$(DEPDIR)/binaryoption.Po \
	./$(DEPDIR)/blackdeltacalculator.Po \
	./$(DEPDIR)/blackformula.Po ./$(DEPDIR)/bonds.Po \
	./$(DEPDIR)/brownianbridge.Po \
	./$(DEPDIR)/businessdayconventions.Po ./$(DEPDIR)/calendars.Po \
	./$(DEPDIR)/callablebonds.Po ./$(DEPDIR)/capfloor.Po \
	./$(DEPDIR)/capflooredcoupon.Po ./$(DEPDIR)/cashflows.Po \
	./$(DEPDIR)/catbonds.Po ./$(DEPDIR)/cdo.Po \
	./$(DEPDIR)/cdsoption.Po ./$(DEPDIR)/chooseroption.Po \
	./$(DEPDIR)/cliquetoption.Po ./$(DEPDIR)/cms.Po \
	./$(DEPDIR)/cmsspread.Po ./$(DEPDIR)/commodityunitofmeasure.Po \
	./$(DEPDIR)/compiledboostversion.Po \
	./$(DEPDIR)/compoundoption.Po ./$(DEPDIR)/convertiblebonds.Po \
	./$(DEPDIR)/covariance.Po ./$(DEPDIR)/creditdefaultswap.Po \
	./$(DEPDIR)/creditriskplus.Po ./$(DEPDIR)/curvestates.Po \
	./$(DEPDIR)/dates.Po ./$(DEPDIR)/daycounters.Po \
	./$(DEPDIR)/defaultprobabilitycurves.Po \
	./$(DEPDIR)/digitalcoupon.Po ./$(DEPDIR)/digitaloption.Po \
	./$(DEPDIR)/distributions.Po ./$(DEPDIR)/dividendoption.Po \
	./$(DEPDIR)/doublebarrieroption.Po \
	./$(DEPDIR)/doublebinaryoption.Po \
	./$(DEPDIR)/europeanoption.Po ./$(DEPDIR)/everestoption.Po \
	./$(DEPDIR)/exchangerate.Po ./$(DEPDIR)/extendedtrees.Po \
	./$(DEPDIR)/extensibleoptions.Po \
	./$(DEPDIR)/fastfouriertransform.Po ./$(DEPDIR)/fdcev.Po \
	./$(DEPDIR)/fdcir.Po ./$(DEPDIR)/fdheston.Po \
	./$(DEPDIR)/fdmlinearop.Po ./$(DEPDIR)/fdsabr.Po \
	./$(DEPDIR)/fittedbonddiscountcurve.Po \
	./$(DEPDIR)/forwardoption.Po \
	./$(DEPDIR)/forwardrateagreement.Po ./$(DEPDIR)/functions.Po \
	./$(DEPDIR)/garch.Po ./$(DEPDIR)/gaussianquadratures.Po \
	./$(DEPDIR)/gjrgarchmodel.Po ./$(DEPDIR)/gsr.Po \
	./$(DEPDIR)/hestonmodel.Po ./$(DEPDIR)/hestonslvmodel.Po \
	./$(DEPDIR)/himalayaoption.Po \
	./$(DEPDIR)/hybridhestonhullwhiteprocess.Po \
	./$(DEPDIR)/indexes.Po ./$(DEPDIR)/inflation.Po \
	./$(DEPDIR)/inflationcapfloor.Po \
	./$(DEPDIR)/inflationcapflooredcoupon.Po \
	./$(DEPDIR)/inflationcpibond.Po \
	./$(DEPDIR)/inflationcpicapfloor.Po \
	./$(DEPDIR)/inflationcpiswap.Po \
	./$(DEPDIR)/inflationvolatility.Po ./$(DEPDIR)/instruments.Po \
	./$(DEPDIR)/integrals.Po ./$(DEPDIR)/interestrates.Po \
	./$(DEPDIR)/interpolations.Po ./$(DEPDIR)/jumpdiffusion.Po \
	./$(DEPDIR)/lazyobject.Po ./$(DEPDIR)/libUnitMain_la-main.Plo \
	./$(DEPDIR)/libormarketmodel.Po \
	./$(DEPDIR)/libormarketmodelprocess.Po \
	./$(DEPDIR)/linearleastsquaresregression.Po \
	./$(DEPDIR)/lookbackoptions.Po \
	./$(DEPDIR)/lowdiscrepancysequences.Po \
	./$(DEPDIR)/margrabeoption.Po ./$(DEPDIR)/marketmodel.Po \
	./$(DEPDIR)/marketmodel_cms.Po ./$(DEPDIR)/marketmodel_smm.Po \
	./$(DEPDIR)/marketmodel_smmcapletalphacalibration.Po \
	./$(DEPDIR)/marketmodel_smmcapletcalibration.Po \
	./$(DEPDIR)/marketmodel_smmcaplethomocalibration.Po \
	./$(DEPDIR)/markovfunctional.Po ./$(DEPDIR)/matrices.Po \
	./$(DEPDIR)/mclongstaffschwartzengine.Po \
	./$(DEPDIR)/mersennetwister.Po ./$(DEPDIR)/money.Po \
	./$(DEPDIR)/noarbsabr.Po ./$(DEPDIR)/normalclvmodel.Po \
	./$(DEPDIR)/nthorderderivativeop.Po \
	./$(DEPDIR)/nthtodefault.Po \
	./$(DEPDIR)/numericaldifferentiation.Po \
	./$(DEPDIR)/observable.Po ./$(DEPDIR)/ode.Po \
	./$(DEPDIR)/operators.Po ./$(DEPDIR)/optimizers.Po \
	./$(DEPDIR)/optionletstripper.Po \
	./$(DEPDIR)/overnightindexedswap.Po \
	./$(DEPDIR)/pagodaoption.Po \
	./$(DEPDIR)/partialtimebarrieroption.Po \
	./$(DEPDIR)/pathgenerator.Po ./$(DEPDIR)/period.Po \
	./$(DEPDIR)/piecewiseyieldcurve.Po \
	./$(DEPDIR)/piecewisezerospreadedtermstructure.Po \
	./$(DEPDIR)/quantlibbenchmark.Po \
	./$(DEPDIR)/quantlibtestsuite.Po ./$(DEPDIR)/quantooption.Po \
	./$(DEPDIR)/quotes.Po ./$(DEPDIR)/rangeaccrual.Po \
	./$(DEPDIR)/riskneutraldensitycalculator.Po \
	./$(DEPDIR)/riskstats.Po ./$(DEPDIR)/rngtraits.Po \
	./$(DEPDIR)/rounding.Po ./$(DEPDIR)/sampledcurve.Po \
	./$(DEPDIR)/schedule.Po ./$(DEPDIR)/shortratemodels.Po \
	./$(DEPDIR)/sofrfutures.Po ./$(DEPDIR)/solvers.Po \
	./$(DEPDIR)/spreadoption.Po ./$(DEPDIR)/squarerootclvmodel.Po \
	./$(DEPDIR)/stats.Po ./$(DEPDIR)/swap.Po \
	./$(DEPDIR)/swapforwardmappings.Po ./$(DEPDIR)/swaption.Po \
	./$(DEPDIR)/swaptionvolatilitycube.Po \
	./$(DEPDIR)/swaptionvolatilitymatrix.Po \
	./$(DEPDIR)/swingoption.Po ./$(DEPDIR)/termstructures.Po \
	./$(DEPDIR)/timegrid.Po ./$(DEPDIR)/timeseries.Po \
	./$(DEPDIR)/tqreigendecomposition.Po ./$(DEPDIR)/tracing.Po \
	./$(DEPDIR)/transformedgrid.Po \
	./$(DEPDIR)/twoassetbarrieroption.Po \
	./$(DEPDIR)/twoassetcorrelationoption.Po \
	./$(DEPDIR)/ultimateforwardtermstructure.Po \
	./$(DEPDIR)/unity_benchmark.Po ./$(DEPDIR)/unity_test.Po \
	./$(DEPDIR)/utilities.Po ./$(DEPDIR)/variancegamma.Po \
	./$(DEPDIR)/varianceoption.Po ./$(DEPDIR)/varianceswaps.Po \
	./$(DEPDIR)/volatilitymodels.Po ./$(DEPDIR)/vpp.Po \
	./$(DEPDIR)/zabr.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libUnitMain_la_SOURCES) $(quantlib_benchmark_SOURCES) \
	$(nodist_quantlib_benchmark_SOURCES) \
	$(quantlib_test_suite_SOURCES) \
	$(nodist_quantlib_test_suite_SOURCES)
DIST_SOURCES = $(am__libUnitMain_la_SOURCES_DIST) \
	$(am__quantlib_benchmark_SOURCES_DIST) \
	$(am__quantlib_test_suite_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp \
	$(top_srcdir)/config/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_INCLUDE = @BOOST_INCLUDE@
BOOST_INTERPROCESS_LIB = @BOOST_INTERPROCESS_LIB@
BOOST_LIB = @BOOST_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
BOOST_UNIT_TEST_LIB = @BOOST_UNIT_TEST_LIB@
BOOST_UNIT_TEST_MAIN_CXXFLAGS = @BOOST_UNIT_TEST_MAIN_CXXFLAGS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DVIPS = @DVIPS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EMACS = @EMACS@
EMACSLOADPATH = @EMACSLOADPATH@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LATEX = @LATEX@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINDEX = @MAKEINDEX@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENMP_CXXFLAGS = @OPENMP_CXXFLAGS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFLATEX = @PDFLATEX@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
lispdir = @lispdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
QL_TEST_SRCS = \
	quantlibtestsuite.cpp \
	americanoption.cpp \
	amortizingbond.cpp \
	andreasenhugevolatilityinterpl.cpp \
	array.cpp \
	asianoptions.cpp \
	assetswap.cpp \
	autocovariances.cpp \
	barrieroption.cpp \
	binaryoption.cpp \
	basismodels.cpp \
	basketoption.cpp \
	batesmodel.cpp \
	bermudanswaption.cpp \
	blackdeltacalculator.cpp \
	blackformula.cpp \
	bonds.cpp \
	brownianbridge.cpp \
	businessdayconventions.cpp \
	calendars.cpp \
	callablebonds.cpp \
	capfloor.cpp \
	capflooredcoupon.cpp \
	cashflows.cpp \
	catbonds.cpp \
	cdo.cpp \
	cdsoption.cpp \
	chooseroption.cpp \
	cliquetoption.cpp \
	cms.cpp \
	cmsspread.cpp \
	commodityunitofmeasure.cpp \
	compiledboostversion.cpp \
	compoundoption.cpp \
	convertiblebonds.cpp \
	covariance.cpp \
	creditdefaultswap.cpp \
	creditriskplus.cpp \
	curvestates.cpp \
	dates.cpp \
	daycounters.cpp \
	defaultprobabilitycurves.cpp \
	digitalcoupon.cpp \
	digitaloption.cpp \
	distributions.cpp \
	dividendoption.cpp \
	doublebarrieroption.cpp \
	doublebinaryoption.cpp \
	europeanoption.cpp \
	everestoption.cpp \
	exchangerate.cpp \
	extendedtrees.cpp \
	extensibleoptions.cpp \
	fastfouriertransform.cpp \
	fdheston.cpp \
	fdcir.cpp \
	fdmlinearop.cpp \
	fdcev.cpp \
	fdsabr.cpp \
	fittedbonddiscountcurve.cpp \
	forwardoption.cpp \
	forwardrateagreement.cpp \
	functions.cpp \
	garch.cpp \
	gaussianquadratures.cpp \
	gjrgarchmodel.cpp \
	gsr.cpp \
	hestonmodel.cpp \
	hestonslvmodel.cpp \
	himalayaoption.cpp \
	hybridhestonhullwhiteprocess.cpp \
	indexes.cpp \
	inflation.cpp \
	inflationcapfloor.cpp \
	inflationcapflooredcoupon.cpp \
	inflationcpibond.cpp \
	inflationcpicapfloor.cpp \
	inflationcpiswap.cpp \
	inflationvolatility.cpp \
	instruments.cpp \
	integrals.cpp \
	interestrates.cpp \
	interpolations.cpp \
	jumpdiffusion.cpp \
	lazyobject.cpp \
	libormarketmodel.cpp \
	libormarketmodelprocess.cpp \
	linearleastsquaresregression.cpp \
	lookbackoptions.cpp \
	lowdiscrepancysequences.cpp \
	margrabeoption.cpp \
	marketmodel.cpp \
	marketmodel_cms.cpp \
	marketmodel_smm.cpp \
	marketmodel_smmcapletalphacalibration.cpp \
	marketmodel_smmcapletcalibration.cpp \
	marketmodel_smmcaplethomocalibration.cpp \
	markovfunctional.cpp \
	matrices.cpp \
	mclongstaffschwartzengine.cpp \
	mersennetwister.cpp \
	money.cpp \
	noarbsabr.cpp \
	normalclvmodel.cpp \
	nthorderderivativeop.cpp \
	nthtodefault.cpp \
	numericaldifferentiation.cpp \
	observable.cpp \
	ode.cpp \
	operators.cpp \
	optimizers.cpp \
	optionletstripper.cpp \
	overnightindexedswap.cpp \
	pagodaoption.cpp \
	partialtimebarrieroption.cpp \
	pathgenerator.cpp \
	period.cpp \
	piecewiseyieldcurve.cpp \
	piecewisezerospreadedtermstructure.cpp \
	quantooption.cpp \
	quotes.cpp \
	rangeaccrual.cpp \
	riskneutraldensitycalculator.cpp \
	riskstats.cpp \
	rngtraits.cpp \
	rounding.cpp \
	sampledcurve.cpp \
	schedule.cpp \
	shortratemodels.cpp \
	sofrfutures.cpp \
	solvers.cpp \
	spreadoption.cpp \
	squarerootclvmodel.cpp \
	stats.cpp \
	swap.cpp \
	swapforwardmappings.cpp \
	swaption.cpp \
	swaptionvolatilitycube.cpp \
	swaptionvolatilitymatrix.cpp \
	swingoption.cpp \
	termstructures.cpp \
	timegrid.cpp \
	timeseries.cpp \
	transformedgrid.cpp \
	tqreigendecomposition.cpp \
	tracing.cpp \
	twoassetbarrieroption.cpp \
	twoassetcorrelationoption.cpp \
	ultimateforwardtermstructure.cpp \
	utilities.cpp \
	variancegamma.cpp \
	varianceoption.cpp \
	varianceswaps.cpp \
	volatilitymodels.cpp \
	vpp.cpp \
	zabr.cpp

QL_TEST_HDRS = \
	speedlevel.hpp \
	americanoption.hpp \
	amortizingbond.hpp \
	andreasenhugevolatilityinterpl.hpp \
	array.hpp \
	asianoptions.hpp \
	assetswap.hpp \
	autocovariances.hpp \
	barrieroption.hpp \
	binaryoption.hpp \
	basismodels.hpp \
	basketoption.hpp \
	batesmodel.hpp \
	bermudanswaption.hpp \
	blackdeltacalculator.hpp \
	blackformula.hpp \
	bonds.hpp \
	brownianbridge.hpp \
	businessdayconventions.hpp \
	calendars.hpp \
	callablebonds.hpp \
	capfloor.hpp \
	capflooredcoupon.hpp \
	cashflows.hpp \
	catbonds.hpp \
	cdo.hpp \
	cdsoption.hpp \
	chooseroption.hpp \
	cliquetoption.hpp \
	cms.hpp \
	cmsspread.hpp \
	commodityunitofmeasure.hpp \
	compiledboostversion.hpp \
	compoundoption.hpp \
	convertiblebonds.hpp \
	covariance.hpp \
	creditdefaultswap.hpp \
	creditriskplus.hpp \
	curvestates.hpp \
	dates.hpp \
	daycounters.hpp \
	defaultprobabilitycurves.hpp \
	digitalcoupon.hpp \
	digitaloption.hpp \
	distributions.hpp \
	dividendoption.hpp \
	doublebarrieroption.hpp \
	doublebinaryoption.hpp \
	europeanoption.hpp \
	everestoption.hpp \
	exchangerate.hpp \
	extendedtrees.hpp \
	extensibleoptions.hpp \
	fastfouriertransform.hpp \
	fdheston.hpp \
	fdcir.hpp \
	fdmlinearop.hpp \
	fdcev.hpp \
	fdsabr.hpp \
	fittedbonddiscountcurve.hpp \
	forwardoption.hpp \
	forwardrateagreement.hpp \
	functions.hpp \
	garch.hpp \
	gaussianquadratures.hpp \
	gjrgarchmodel.hpp \
	gsr.hpp \
	hestonmodel.hpp \
	hestonslvmodel.hpp \
	himalayaoption.hpp \
	hybridhestonhullwhiteprocess.hpp \
	indexes.hpp \
	inflation.hpp \
	inflationcapfloor.hpp \
	inflationcapflooredcoupon.hpp \
	inflationcpibond.hpp \
	inflationcpicapfloor.hpp \
	inflationcpiswap.hpp \
	inflationvolatility.hpp \
	instruments.hpp \
	integrals.hpp \
	interestrates.hpp \
	interpolations.hpp \
	jumpdiffusion.hpp \
	lazyobject.hpp \
	libormarketmodel.hpp \
	libormarketmodelprocess.hpp \
	linearleastsquaresregression.hpp \
	lookbackoptions.hpp \
	lowdiscrepancysequences.hpp \
	margrabeoption.hpp \
	marketmodel.hpp \
	marketmodel_cms.hpp \
	marketmodel_smm.hpp \
	marketmodel_smmcapletalphacalibration.hpp \
	marketmodel_smmcapletcalibration.hpp \
	marketmodel_smmcaplethomocalibration.hpp \
	markovfunctional.hpp \
	matrices.hpp \
	mclongstaffschwartzengine.hpp \
	mersennetwister.hpp \
	money.hpp \
	noarbsabr.hpp \
	normalclvmodel.hpp \
	nthorderderivativeop.hpp \
	nthtodefault.hpp \
	numericaldifferentiation.hpp \
	observable.hpp \
	ode.hpp \
	operators.hpp \
	optimizers.hpp \
	optionletstripper.hpp \
	overnightindexedswap.hpp \
	pagodaoption.hpp \
	partialtimebarrieroption.hpp \
	pathgenerator.hpp \
	period.hpp \
	piecewiseyieldcurve.hpp \
	piecewisezerospreadedtermstructure.hpp \
	quantooption.hpp \
	quotes.hpp \
	rangeaccrual.hpp \
	riskneutraldensitycalculator.hpp \
	riskstats.hpp \
	rngtraits.hpp \
	rounding.hpp \
	sampledcurve.hpp \
	schedule.hpp \
	shortratemodels.hpp \
	sofrfutures.hpp \
	solvers.hpp \
	spreadoption.hpp \
	squarerootclvmodel.hpp \
	stats.hpp \
	swap.hpp \
	swapforwardmappings.hpp \
	swaption.hpp \
	swaptionvolatilitycube.hpp \
	swaptionvolatilitymatrix.hpp \
	swaptionvolstructuresutilities.hpp \
	swingoption.hpp \
	termstructures.hpp \
	timegrid.hpp \
	timeseries.hpp \
	transformedgrid.hpp \
	tqreigendecomposition.hpp \
	tracing.hpp \
	twoassetbarrieroption.hpp \
	twoassetcorrelationoption.hpp \
	ultimateforwardtermstructure.hpp \
	utilities.hpp \
	variancegamma.hpp \
	varianceoption.hpp \
	varianceswaps.hpp \
	volatilitymodels.hpp \
	vpp.hpp \
	zabr.hpp

QL_TESTS = ${QL_TEST_SRCS} ${QL_TEST_HDRS}
QL_BENCHMARK_SRCS = \
	quantlibbenchmark.cpp \
	americanoption.cpp \
	asianoptions.cpp \
	barrieroption.cpp \
	doublebarrieroption.cpp \
	basketoption.cpp \
	batesmodel.cpp \
	convertiblebonds.cpp \
	digitaloption.cpp \
	dividendoption.cpp \
	europeanoption.cpp \
	fdheston.cpp \
	hestonmodel.cpp \
	interpolations.cpp \
	jumpdiffusion.cpp \
	lowdiscrepancysequences.cpp \
	marketmodel_cms.cpp \
	marketmodel_smm.cpp \
	quantooption.cpp \
	riskstats.cpp \
	shortratemodels.cpp \
	utilities.cpp

QL_BENCHMARK_HDRS = \
	americanoption.hpp \
	asianoptions.hpp \
	barrieroption.hpp \
	doublebarrieroption.hpp \
	basketoption.hpp \
	batesmodel.hpp \
	convertiblebonds.hpp \
	digitaloption.hpp \
	dividendoption.hpp \
	europeanoption.hpp \
	fdheston.hpp \
	hestonmodel.hpp \
	interpolations.hpp \
	jumpdiffusion.hpp \
	lowdiscrepancysequences.hpp \
	marketmodel_cms.hpp \
	marketmodel_smm.hpp \
	quantooption.hpp \
	riskstats.hpp \
	shortratemodels.hpp \
	utilities.hpp

QL_BENCHMARKS = ${QL_BENCHMARK_SRCS} ${QL_BENCHMARK_HDRS}
@BOOST_UNIT_TEST_FOUND_TRUE@AM_CPPFLAGS = -I${top_builddir} -I${top_srcdir}
@BOOST_UNIT_TEST_FOUND_TRUE@noinst_LTLIBRARIES = libUnitMain.la
@BOOST_UNIT_TEST_FOUND_TRUE@libUnitMain_la_SOURCES = main.cpp
@BOOST_UNIT_TEST_FOUND_TRUE@libUnitMain_la_CXXFLAGS = ${BOOST_UNIT_TEST_MAIN_CXXFLAGS}
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@nodist_quantlib_test_suite_SOURCES = unity_test.cpp
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@nodist_quantlib_benchmark_SOURCES = unity_benchmark.cpp
@BOOST_UNIT_TEST_FOUND_FALSE@EXTRA_DIST = \
@BOOST_UNIT_TEST_FOUND_FALSE@	${QL_TESTS} \
@BOOST_UNIT_TEST_FOUND_FALSE@	CMakeLists.txt \
@BOOST_UNIT_TEST_FOUND_FALSE@	paralleltestrunner.hpp \
@BOOST_UNIT_TEST_FOUND_FALSE@	quantlibbenchmark.cpp \
@BOOST_UNIT_TEST_FOUND_FALSE@	README.txt \
@BOOST_UNIT_TEST_FOUND_FALSE@	testsuite.vcxproj \
@BOOST_UNIT_TEST_FOUND_FALSE@	testsuite.vcxproj.filters

@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_FALSE@EXTRA_DIST = $(am__append_1)
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@EXTRA_DIST =  \
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@	$(QL_TESTS) \
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@	$(QL_BENCHMARKS) \
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@	$(am__append_1)
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_FALSE@quantlib_test_suite_SOURCES = $(QL_TESTS)
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_FALSE@quantlib_benchmark_SOURCES = $(QL_BENCHMARKS)
@BOOST_UNIT_TEST_FOUND_TRUE@quantlib_test_suite_LDADD = libUnitMain.la ${top_builddir}/ql/libQuantLib.la \
@BOOST_UNIT_TEST_FOUND_TRUE@                            ${BOOST_UNIT_TEST_LIB} ${BOOST_THREAD_LIB} ${BOOST_INTERPROCESS_LIB}

@BOOST_UNIT_TEST_FOUND_TRUE@quantlib_benchmark_LDADD = libUnitMain.la ${top_builddir}/ql/libQuantLib.la \
@BOOST_UNIT_TEST_FOUND_TRUE@                           ${BOOST_UNIT_TEST_LIB} ${BOOST_THREAD_LIB}

@BOOST_UNIT_TEST_FOUND_TRUE@TESTS = quantlib-test-suite$(EXEEXT)
@BOOST_UNIT_TEST_FOUND_TRUE@TESTS_ENVIRONMENT = BOOST_TEST_LOG_LEVEL=message BOOST_TEST_COLOR_OUTPUT=false
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test-suite/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test-suite/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libUnitMain.la: $(libUnitMain_la_OBJECTS) $(libUnitMain_la_DEPENDENCIES) $(EXTRA_libUnitMain_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libUnitMain_la_LINK) $(am_libUnitMain_la_rpath) $(libUnitMain_la_OBJECTS) $(libUnitMain_la_LIBADD) $(LIBS)

quantlib-benchmark$(EXEEXT): $(quantlib_benchmark_OBJECTS) $(quantlib_benchmark_DEPENDENCIES) $(EXTRA_quantlib_benchmark_DEPENDENCIES) 
	@rm -f quantlib-benchmark$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(quantlib_benchmark_OBJECTS) $(quantlib_benchmark_LDADD) $(LIBS)

quantlib-test-suite$(EXEEXT): $(quantlib_test_suite_OBJECTS) $(quantlib_test_suite_DEPENDENCIES) $(EXTRA_quantlib_test_suite_DEPENDENCIES) 
	@rm -f quantlib-test-suite$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(quantlib_test_suite_OBJECTS) $(quantlib_test_suite_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/americanoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/amortizingbond.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/andreasenhugevolatilityinterpl.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/array.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/asianoptions.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/assetswap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/autocovariances.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barrieroption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/basismodels.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/basketoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/batesmodel.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bermudanswaption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/binaryoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackdeltacalculator.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackformula.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bonds.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brownianbridge.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/businessdayconventions.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/calendars.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/callablebonds.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/capfloor.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/capflooredcoupon.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cashflows.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/catbonds.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cdo.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cdsoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chooseroption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cliquetoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cms.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cmsspread.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/commodityunitofmeasure.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compiledboostversion.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compoundoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/convertiblebonds.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/covariance.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/creditdefaultswap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/creditriskplus.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/curvestates.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dates.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/daycounters.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/defaultprobabilitycurves.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/digitalcoupon.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/digitaloption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/distributions.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dividendoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doublebarrieroption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doublebinaryoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/europeanoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/everestoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exchangerate.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/extendedtrees.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/extensibleoptions.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastfouriertransform.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fdcev.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fdcir.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fdheston.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fdmlinearop.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fdsabr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fittedbonddiscountcurve.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/forwardoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/forwardrateagreement.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/functions.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/garch.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gaussianquadratures.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gjrgarchmodel.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gsr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hestonmodel.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hestonslvmodel.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/himalayaoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hybridhestonhullwhiteprocess.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/indexes.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inflation.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inflationcapfloor.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inflationcapflooredcoupon.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inflationcpibond.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inflationcpicapfloor.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inflationcpiswap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inflationvolatility.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/instruments.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/integrals.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interestrates.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interpolations.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jumpdiffusion.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lazyobject.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libUnitMain_la-main.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libormarketmodel.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libormarketmodelprocess.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/linearleastsquaresregression.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lookbackoptions.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lowdiscrepancysequences.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/margrabeoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/marketmodel.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/marketmodel_cms.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/marketmodel_smm.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/marketmodel_smmcapletalphacalibration.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/marketmodel_smmcapletcalibration.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/marketmodel_smmcaplethomocalibration.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/markovfunctional.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/matrices.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mclongstaffschwartzengine.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mersennetwister.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/money.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/noarbsabr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/normalclvmodel.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nthorderderivativeop.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nthtodefault.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/numericaldifferentiation.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/observable.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ode.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operators.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/optimizers.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/optionletstripper.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/overnightindexedswap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pagodaoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/partialtimebarrieroption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pathgenerator.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/period.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/piecewiseyieldcurve.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/piecewisezerospreadedtermstructure.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quantlibbenchmark.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quantlibtestsuite.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quantooption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quotes.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rangeaccrual.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/riskneutraldensitycalculator.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/riskstats.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rngtraits.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rounding.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sampledcurve.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/schedule.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shortratemodels.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sofrfutures.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/solvers.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spreadoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/squarerootclvmodel.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stats.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swapforwardmappings.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swaption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swaptionvolatilitycube.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swaptionvolatilitymatrix.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swingoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/termstructures.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timegrid.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timeseries.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tqreigendecomposition.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tracing.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/transformedgrid.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twoassetbarrieroption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twoassetcorrelationoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ultimateforwardtermstructure.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unity_benchmark.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unity_test.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utilities.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/variancegamma.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/varianceoption.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/varianceswaps.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/volatilitymodels.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vpp.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zabr.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

libUnitMain_la-main.lo: main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libUnitMain_la_CXXFLAGS) $(CXXFLAGS) -MT libUnitMain_la-main.lo -MD -MP -MF $(DEPDIR)/libUnitMain_la-main.Tpo -c -o libUnitMain_la-main.lo `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libUnitMain_la-main.Tpo $(DEPDIR)/libUnitMain_la-main.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='main.cpp' object='libUnitMain_la-main.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libUnitMain_la_CXXFLAGS) $(CXXFLAGS) -c -o libUnitMain_la-main.lo `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: 
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
quantlib-test-suite.log: quantlib-test-suite$(EXEEXT)
	@p='quantlib-test-suite$(EXEEXT)'; \
	b='quantlib-test-suite'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/americanoption.Po
	-rm -f ./$(DEPDIR)/amortizingbond.Po
	-rm -f ./$(DEPDIR)/andreasenhugevolatilityinterpl.Po
	-rm -f ./$(DEPDIR)/array.Po
	-rm -f ./$(DEPDIR)/asianoptions.Po
	-rm -f ./$(DEPDIR)/assetswap.Po
	-rm -f ./$(DEPDIR)/autocovariances.Po
	-rm -f ./$(DEPDIR)/barrieroption.Po
	-rm -f ./$(DEPDIR)/basismodels.Po
	-rm -f ./$(DEPDIR)/basketoption.Po
	-rm -f ./$(DEPDIR)/batesmodel.Po
	-rm -f ./$(DEPDIR)/bermudanswaption.Po
	-rm -f ./$(DEPDIR)/binaryoption.Po
	-rm -f ./$(DEPDIR)/blackdeltacalculator.Po
	-rm -f ./$(DEPDIR)/blackformula.Po
	-rm -f ./$(DEPDIR)/bonds.Po
	-rm -f ./$(DEPDIR)/brownianbridge.Po
	-rm -f ./$(DEPDIR)/businessdayconventions.Po
	-rm -f ./$(DEPDIR)/calendars.Po
	-rm -f ./$(DEPDIR)/callablebonds.Po
	-rm -f ./$(DEPDIR)/capfloor.Po
	-rm -f ./$(DEPDIR)/capflooredcoupon.Po
	-rm -f ./$(DEPDIR)/cashflows.Po
	-rm -f ./$(DEPDIR)/catbonds.Po
	-rm -f ./$(DEPDIR)/cdo.Po
	-rm -f ./$(DEPDIR)/cdsoption.Po
	-rm -f ./$(DEPDIR)/chooseroption.Po
	-rm -f ./$(DEPDIR)/cliquetoption.Po
	-rm -f ./$(DEPDIR)/cms.Po
	-rm -f ./$(DEPDIR)/cmsspread.Po
	-rm -f ./$(DEPDIR)/commodityunitofmeasure.Po
	-rm -f ./$(DEPDIR)/compiledboostversion.Po
	-rm -f ./$(DEPDIR)/compoundoption.Po
	-rm -f ./$(DEPDIR)/convertiblebonds.Po
	-rm -f ./$(DEPDIR)/covariance.Po
	-rm -f ./$(DEPDIR)/creditdefaultswap.Po
	-rm -f ./$(DEPDIR)/creditriskplus.Po
	-rm -f ./$(DEPDIR)/curvestates.Po
	-rm -f ./$(DEPDIR)/dates.Po
	-rm -f ./$(DEPDIR)/daycounters.Po
	-rm -f ./$(DEPDIR)/defaultprobabilitycurves.Po
	-rm -f ./$(DEPDIR)/digitalcoupon.Po
	-rm -f ./$(DEPDIR)/digitaloption.Po
	-rm -f ./$(DEPDIR)/distributions.Po
	-rm -f ./$(DEPDIR)/dividendoption.Po
	-rm -f ./$(DEPDIR)/doublebarrieroption.Po
	-rm -f ./$(DEPDIR)/doublebinaryoption.Po
	-rm -f ./$(DEPDIR)/europeanoption.Po
	-rm -f ./$(DEPDIR)/everestoption.Po
	-rm -f ./$(DEPDIR)/exchangerate.Po
	-rm -f ./$(DEPDIR)/extendedtrees.Po
	-rm -f ./$(DEPDIR)/extensibleoptions.Po
	-rm -f ./$(DEPDIR)/fastfouriertransform.Po
	-rm -f ./$(DEPDIR)/fdcev.Po
	-rm -f ./$(DEPDIR)/fdcir.Po
	-rm -f ./$(DEPDIR)/fdheston.Po
	-rm -f ./$(DEPDIR)/fdmlinearop.Po
	-rm -f ./$(DEPDIR)/fdsabr.Po
	-rm -f ./$(DEPDIR)/fittedbonddiscountcurve.Po
	-rm -f ./$(DEPDIR)/forwardoption.Po
	-rm -f ./$(DEPDIR)/forwardrateagreement.Po
	-rm -f ./$(DEPDIR)/functions.Po
	-rm -f ./$(DEPDIR)/garch.Po
	-rm -f ./$(DEPDIR)/gaussianquadratures.Po
	-rm -f ./$(DEPDIR)/gjrgarchmodel.Po
	-rm -f ./$(DEPDIR)/gsr.Po
	-rm -f ./$(DEPDIR)/hestonmodel.Po
	-rm -f ./$(DEPDIR)/hestonslvmodel.Po
	-rm -f ./$(DEPDIR)/himalayaoption.Po
	-rm -f ./$(DEPDIR)/hybridhestonhullwhiteprocess.Po
	-rm -f ./$(DEPDIR)/indexes.Po
	-rm -f ./$(DEPDIR)/inflation.Po
	-rm -f ./$(DEPDIR)/inflationcapfloor.Po
	-rm -f ./$(DEPDIR)/inflationcapflooredcoupon.Po
	-rm -f ./$(DEPDIR)/inflationcpibond.Po
	-rm -f ./$(DEPDIR)/inflationcpicapfloor.Po
	-rm -f ./$(DEPDIR)/inflationcpiswap.Po
	-rm -f ./$(DEPDIR)/inflationvolatility.Po
	-rm -f ./$(DEPDIR)/instruments.Po
	-rm -f ./$(DEPDIR)/integrals.Po
	-rm -f ./$(DEPDIR)/interestrates.Po
	-rm -f ./$(DEPDIR)/interpolations.Po
	-rm -f ./$(DEPDIR)/jumpdiffusion.Po
	-rm -f ./$(DEPDIR)/lazyobject.Po
	-rm -f ./$(DEPDIR)/libUnitMain_la-main.Plo
	-rm -f ./$(DEPDIR)/libormarketmodel.Po
	-rm -f ./$(DEPDIR)/libormarketmodelprocess.Po
	-rm -f ./$(DEPDIR)/linearleastsquaresregression.Po
	-rm -f ./$(DEPDIR)/lookbackoptions.Po
	-rm -f ./$(DEPDIR)/lowdiscrepancysequences.Po
	-rm -f ./$(DEPDIR)/margrabeoption.Po
	-rm -f ./$(DEPDIR)/marketmodel.Po
	-rm -f ./$(DEPDIR)/marketmodel_cms.Po
	-rm -f ./$(DEPDIR)/marketmodel_smm.Po
	-rm -f ./$(DEPDIR)/marketmodel_smmcapletalphacalibration.Po
	-rm -f ./$(DEPDIR)/marketmodel_smmcapletcalibration.Po
	-rm -f ./$(DEPDIR)/marketmodel_smmcaplethomocalibration.Po
	-rm -f ./$(DEPDIR)/markovfunctional.Po
	-rm -f ./$(DEPDIR)/matrices.Po
	-rm -f ./$(DEPDIR)/mclongstaffschwartzengine.Po
	-rm -f ./$(DEPDIR)/mersennetwister.Po
	-rm -f ./$(DEPDIR)/money.Po
	-rm -f ./$(DEPDIR)/noarbsabr.Po
	-rm -f ./$(DEPDIR)/normalclvmodel.Po
	-rm -f ./$(DEPDIR)/nthorderderivativeop.Po
	-rm -f ./$(DEPDIR)/nthtodefault.Po
	-rm -f ./$(DEPDIR)/numericaldifferentiation.Po
	-rm -f ./$(DEPDIR)/observable.Po
	-rm -f ./$(DEPDIR)/ode.Po
	-rm -f ./$(DEPDIR)/operators.Po
	-rm -f ./$(DEPDIR)/optimizers.Po
	-rm -f ./$(DEPDIR)/optionletstripper.Po
	-rm -f ./$(DEPDIR)/overnightindexedswap.Po
	-rm -f ./$(DEPDIR)/pagodaoption.Po
	-rm -f ./$(DEPDIR)/partialtimebarrieroption.Po
	-rm -f ./$(DEPDIR)/pathgenerator.Po
	-rm -f ./$(DEPDIR)/period.Po
	-rm -f ./$(DEPDIR)/piecewiseyieldcurve.Po
	-rm -f ./$(DEPDIR)/piecewisezerospreadedtermstructure.Po
	-rm -f ./$(DEPDIR)/quantlibbenchmark.Po
	-rm -f ./$(DEPDIR)/quantlibtestsuite.Po
	-rm -f ./$(DEPDIR)/quantooption.Po
	-rm -f ./$(DEPDIR)/quotes.Po
	-rm -f ./$(DEPDIR)/rangeaccrual.Po
	-rm -f ./$(DEPDIR)/riskneutraldensitycalculator.Po
	-rm -f ./$(DEPDIR)/riskstats.Po
	-rm -f ./$(DEPDIR)/rngtraits.Po
	-rm -f ./$(DEPDIR)/rounding.Po
	-rm -f ./$(DEPDIR)/sampledcurve.Po
	-rm -f ./$(DEPDIR)/schedule.Po
	-rm -f ./$(DEPDIR)/shortratemodels.Po
	-rm -f ./$(DEPDIR)/sofrfutures.Po
	-rm -f ./$(DEPDIR)/solvers.Po
	-rm -f ./$(DEPDIR)/spreadoption.Po
	-rm -f ./$(DEPDIR)/squarerootclvmodel.Po
	-rm -f ./$(DEPDIR)/stats.Po
	-rm -f ./$(DEPDIR)/swap.Po
	-rm -f ./$(DEPDIR)/swapforwardmappings.Po
	-rm -f ./$(DEPDIR)/swaption.Po
	-rm -f ./$(DEPDIR)/swaptionvolatilitycube.Po
	-rm -f ./$(DEPDIR)/swaptionvolatilitymatrix.Po
	-rm -f ./$(DEPDIR)/swingoption.Po
	-rm -f ./$(DEPDIR)/termstructures.Po
	-rm -f ./$(DEPDIR)/timegrid.Po
	-rm -f ./$(DEPDIR)/timeseries.Po
	-rm -f ./$(DEPDIR)/tqreigendecomposition.Po
	-rm -f ./$(DEPDIR)/tracing.Po
	-rm -f ./$(DEPDIR)/transformedgrid.Po
	-rm -f ./$(DEPDIR)/twoassetbarrieroption.Po
	-rm -f ./$(DEPDIR)/twoassetcorrelationoption.Po
	-rm -f ./$(DEPDIR)/ultimateforwardtermstructure.Po
	-rm -f ./$(DEPDIR)/unity_benchmark.Po
	-rm -f ./$(DEPDIR)/unity_test.Po
	-rm -f ./$(DEPDIR)/utilities.Po
	-rm -f ./$(DEPDIR)/variancegamma.Po
	-rm -f ./$(DEPDIR)/varianceoption.Po
	-rm -f ./$(DEPDIR)/varianceswaps.Po
	-rm -f ./$(DEPDIR)/volatilitymodels.Po
	-rm -f ./$(DEPDIR)/vpp.Po
	-rm -f ./$(DEPDIR)/zabr.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/americanoption.Po
	-rm -f ./$(DEPDIR)/amortizingbond.Po
	-rm -f ./$(DEPDIR)/andreasenhugevolatilityinterpl.Po
	-rm -f ./$(DEPDIR)/array.Po
	-rm -f ./$(DEPDIR)/asianoptions.Po
	-rm -f ./$(DEPDIR)/assetswap.Po
	-rm -f ./$(DEPDIR)/autocovariances.Po
	-rm -f ./$(DEPDIR)/barrieroption.Po
	-rm -f ./$(DEPDIR)/basismodels.Po
	-rm -f ./$(DEPDIR)/basketoption.Po
	-rm -f ./$(DEPDIR)/batesmodel.Po
	-rm -f ./$(DEPDIR)/bermudanswaption.Po
	-rm -f ./$(DEPDIR)/binaryoption.Po
	-rm -f ./$(DEPDIR)/blackdeltacalculator.Po
	-rm -f ./$(DEPDIR)/blackformula.Po
	-rm -f ./$(DEPDIR)/bonds.Po
	-rm -f ./$(DEPDIR)/brownianbridge.Po
	-rm -f ./$(DEPDIR)/businessdayconventions.Po
	-rm -f ./$(DEPDIR)/calendars.Po
	-rm -f ./$(DEPDIR)/callablebonds.Po
	-rm -f ./$(DEPDIR)/capfloor.Po
	-rm -f ./$(DEPDIR)/capflooredcoupon.Po
	-rm -f ./$(DEPDIR)/cashflows.Po
	-rm -f ./$(DEPDIR)/catbonds.Po
	-rm -f ./$(DEPDIR)/cdo.Po
	-rm -f ./$(DEPDIR)/cdsoption.Po
	-rm -f ./$(DEPDIR)/chooseroption.Po
	-rm -f ./$(DEPDIR)/cliquetoption.Po
	-rm -f ./$(DEPDIR)/cms.Po
	-rm -f ./$(DEPDIR)/cmsspread.Po
	-rm -f ./$(DEPDIR)/commodityunitofmeasure.Po
	-rm -f ./$(DEPDIR)/compiledboostversion.Po
	-rm -f ./$(DEPDIR)/compoundoption.Po
	-rm -f ./$(DEPDIR)/convertiblebonds.Po
	-rm -f ./$(DEPDIR)/covariance.Po
	-rm -f ./$(DEPDIR)/creditdefaultswap.Po
	-rm -f ./$(DEPDIR)/creditriskplus.Po
	-rm -f ./$(DEPDIR)/curvestates.Po
	-rm -f ./$(DEPDIR)/dates.Po
	-rm -f ./$(DEPDIR)/daycounters.Po
	-rm -f ./$(DEPDIR)/defaultprobabilitycurves.Po
	-rm -f ./$(DEPDIR)/digitalcoupon.Po
	-rm -f ./$(DEPDIR)/digitaloption.Po
	-rm -f ./$(DEPDIR)/distributions.Po
	-rm -f ./$(DEPDIR)/dividendoption.Po
	-rm -f ./$(DEPDIR)/doublebarrieroption.Po
	-rm -f ./$(DEPDIR)/doublebinaryoption.Po
	-rm -f ./$(DEPDIR)/europeanoption.Po
	-rm -f ./$(DEPDIR)/everestoption.Po
	-rm -f ./$(DEPDIR)/exchangerate.Po
	-rm -f ./$(DEPDIR)/extendedtrees.Po
	-rm -f ./$(DEPDIR)/extensibleoptions.Po
	-rm -f ./$(DEPDIR)/fastfouriertransform.Po
	-rm -f ./$(DEPDIR)/fdcev.Po
	-rm -f ./$(DEPDIR)/fdcir.Po
	-rm -f ./$(DEPDIR)/fdheston.Po
	-rm -f ./$(DEPDIR)/fdmlinearop.Po
	-rm -f ./$(DEPDIR)/fdsabr.Po
	-rm -f ./$(DEPDIR)/fittedbonddiscountcurve.Po
	-rm -f ./$(DEPDIR)/forwardoption.Po
	-rm -f ./$(DEPDIR)/forwardrateagreement.Po
	-rm -f ./$(DEPDIR)/functions.Po
	-rm -f ./$(DEPDIR)/garch.Po
	-rm -f ./$(DEPDIR)/gaussianquadratures.Po
	-rm -f ./$(DEPDIR)/gjrgarchmodel.Po
	-rm -f ./$(DEPDIR)/gsr.Po
	-rm -f ./$(DEPDIR)/hestonmodel.Po
	-rm -f ./$(DEPDIR)/hestonslvmodel.Po
	-rm -f ./$(DEPDIR)/himalayaoption.Po
	-rm -f ./$(DEPDIR)/hybridhestonhullwhiteprocess.Po
	-rm -f ./$(DEPDIR)/indexes.Po
	-rm -f ./$(DEPDIR)/inflation.Po
	-rm -f ./$(DEPDIR)/inflationcapfloor.Po
	-rm -f ./$(DEPDIR)/inflationcapflooredcoupon.Po
	-rm -f ./$(DEPDIR)/inflationcpibond.Po
	-rm -f ./$(DEPDIR)/inflationcpicapfloor.Po
	-rm -f ./$(DEPDIR)/inflationcpiswap.Po
	-rm -f ./$(DEPDIR)/inflationvolatility.Po
	-rm -f ./$(DEPDIR)/instruments.Po
	-rm -f ./$(DEPDIR)/integrals.Po
	-rm -f ./$(DEPDIR)/interestrates.Po
	-rm -f ./$(DEPDIR)/interpolations.Po
	-rm -f ./$(DEPDIR)/jumpdiffusion.Po
	-rm -f ./$(DEPDIR)/lazyobject.Po
	-rm -f ./$(DEPDIR)/libUnitMain_la-main.Plo
	-rm -f ./$(DEPDIR)/libormarketmodel.Po
	-rm -f ./$(DEPDIR)/libormarketmodelprocess.Po
	-rm -f ./$(DEPDIR)/linearleastsquaresregression.Po
	-rm -f ./$(DEPDIR)/lookbackoptions.Po
	-rm -f ./$(DEPDIR)/lowdiscrepancysequences.Po
	-rm -f ./$(DEPDIR)/margrabeoption.Po
	-rm -f ./$(DEPDIR)/marketmodel.Po
	-rm -f ./$(DEPDIR)/marketmodel_cms.Po
	-rm -f ./$(DEPDIR)/marketmodel_smm.Po
	-rm -f ./$(DEPDIR)/marketmodel_smmcapletalphacalibration.Po
	-rm -f ./$(DEPDIR)/marketmodel_smmcapletcalibration.Po
	-rm -f ./$(DEPDIR)/marketmodel_smmcaplethomocalibration.Po
	-rm -f ./$(DEPDIR)/markovfunctional.Po
	-rm -f ./$(DEPDIR)/matrices.Po
	-rm -f ./$(DEPDIR)/mclongstaffschwartzengine.Po
	-rm -f ./$(DEPDIR)/mersennetwister.Po
	-rm -f ./$(DEPDIR)/money.Po
	-rm -f ./$(DEPDIR)/noarbsabr.Po
	-rm -f ./$(DEPDIR)/normalclvmodel.Po
	-rm -f ./$(DEPDIR)/nthorderderivativeop.Po
	-rm -f ./$(DEPDIR)/nthtodefault.Po
	-rm -f ./$(DEPDIR)/numericaldifferentiation.Po
	-rm -f ./$(DEPDIR)/observable.Po
	-rm -f ./$(DEPDIR)/ode.Po
	-rm -f ./$(DEPDIR)/operators.Po
	-rm -f ./$(DEPDIR)/optimizers.Po
	-rm -f ./$(DEPDIR)/optionletstripper.Po
	-rm -f ./$(DEPDIR)/overnightindexedswap.Po
	-rm -f ./$(DEPDIR)/pagodaoption.Po
	-rm -f ./$(DEPDIR)/partialtimebarrieroption.Po
	-rm -f ./$(DEPDIR)/pathgenerator.Po
	-rm -f ./$(DEPDIR)/period.Po
	-rm -f ./$(DEPDIR)/piecewiseyieldcurve.Po
	-rm -f ./$(DEPDIR)/piecewisezerospreadedtermstructure.Po
	-rm -f ./$(DEPDIR)/quantlibbenchmark.Po
	-rm -f ./$(DEPDIR)/quantlibtestsuite.Po
	-rm -f ./$(DEPDIR)/quantooption.Po
	-rm -f ./$(DEPDIR)/quotes.Po
	-rm -f ./$(DEPDIR)/rangeaccrual.Po
	-rm -f ./$(DEPDIR)/riskneutraldensitycalculator.Po
	-rm -f ./$(DEPDIR)/riskstats.Po
	-rm -f ./$(DEPDIR)/rngtraits.Po
	-rm -f ./$(DEPDIR)/rounding.Po
	-rm -f ./$(DEPDIR)/sampledcurve.Po
	-rm -f ./$(DEPDIR)/schedule.Po
	-rm -f ./$(DEPDIR)/shortratemodels.Po
	-rm -f ./$(DEPDIR)/sofrfutures.Po
	-rm -f ./$(DEPDIR)/solvers.Po
	-rm -f ./$(DEPDIR)/spreadoption.Po
	-rm -f ./$(DEPDIR)/squarerootclvmodel.Po
	-rm -f ./$(DEPDIR)/stats.Po
	-rm -f ./$(DEPDIR)/swap.Po
	-rm -f ./$(DEPDIR)/swapforwardmappings.Po
	-rm -f ./$(DEPDIR)/swaption.Po
	-rm -f ./$(DEPDIR)/swaptionvolatilitycube.Po
	-rm -f ./$(DEPDIR)/swaptionvolatilitymatrix.Po
	-rm -f ./$(DEPDIR)/swingoption.Po
	-rm -f ./$(DEPDIR)/termstructures.Po
	-rm -f ./$(DEPDIR)/timegrid.Po
	-rm -f ./$(DEPDIR)/timeseries.Po
	-rm -f ./$(DEPDIR)/tqreigendecomposition.Po
	-rm -f ./$(DEPDIR)/tracing.Po
	-rm -f ./$(DEPDIR)/transformedgrid.Po
	-rm -f ./$(DEPDIR)/twoassetbarrieroption.Po
	-rm -f ./$(DEPDIR)/twoassetcorrelationoption.Po
	-rm -f ./$(DEPDIR)/ultimateforwardtermstructure.Po
	-rm -f ./$(DEPDIR)/unity_benchmark.Po
	-rm -f ./$(DEPDIR)/unity_test.Po
	-rm -f ./$(DEPDIR)/utilities.Po
	-rm -f ./$(DEPDIR)/variancegamma.Po
	-rm -f ./$(DEPDIR)/varianceoption.Po
	-rm -f ./$(DEPDIR)/varianceswaps.Po
	-rm -f ./$(DEPDIR)/volatilitymodels.Po
	-rm -f ./$(DEPDIR)/vpp.Po
	-rm -f ./$(DEPDIR)/zabr.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist-am \
	ctags ctags-am dist-hook distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


dist-hook:
	mkdir -p $(distdir)/build
	mkdir -p $(distdir)/bin
	cp -p $(srcdir)/bin/runtest.bat $(distdir)/bin

@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@unity_test.cpp: Makefile.am
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@	echo "/* This file is automatically generated; do not edit.     */" > $@
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@	echo "/* Add the files to be included into Makefile.am instead. */" >> $@
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@	echo >> $@
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@	for i in $(QL_TEST_SRCS); do \
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@		echo "#include \"test-suite/$$i\"" >> $@; \
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@	done

@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@unity_benchmark.cpp: Makefile.am
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@	echo "/* This file is automatically generated; do not edit.     */" > $@
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@	echo "/* Add the files to be included into Makefile.am instead. */" >> $@
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@	echo >> $@
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@	for i in $(QL_BENCHMARK_SRCS); do \
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@		echo "#include \"test-suite/$$i\"" >> $@; \
@BOOST_UNIT_TEST_FOUND_TRUE@@UNITY_BUILD_TRUE@	done

@BOOST_UNIT_TEST_FOUND_TRUE@.PHONY: benchmark
@BOOST_UNIT_TEST_FOUND_TRUE@benchmark: quantlib-benchmark$(EXEEXT)
@BOOST_UNIT_TEST_FOUND_TRUE@	BOOST_TEST_LOG_LEVEL=message ./quantlib-benchmark$(EXEEXT)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
